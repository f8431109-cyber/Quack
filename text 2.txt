import os
import feedparser
import requests
import json

# --- CONFIG ---
BOT_TOKEN = os.environ["BOT_TOKEN"]
CHANNEL_ID = os.environ["CHANNEL_ID"]  # example: "-1001234567890"

# Nitter feeds for posts+replies
FEEDS = [
    "https://nitter.net/CosmicVibration/replies/rss",
    "https://nitter.net/DavidSteinman/replies/rss",
    "https://nitter.net/DavidLitt/replies/rss",
    "https://nitter.net/DavidShapiro/replies/rss",
    "https://nitter.net/bottstein/replies/rss",
    "https://nitter.net/mayabenowitz/replies/rss",
    "https://nitter.net/DavidColeStein/replies/rss",
    "https://nitter.net/aditiagarwal/replies/rss",
    "https://nitter.net/PeterZeihan/replies/rss",
    "https://nitter.net/dancohen/replies/rss",
    "https://nitter.net/aryehkontorovich/replies/rss",
    "https://nitter.net/Noahpinion/replies/rss",
    "https://nitter.net/krassenstein/replies/rss",
    "https://nitter.net/bronsteinmm/replies/rss",
    "https://nitter.net/rohitkrishnan/replies/rss"
]

STATE_FILE = "posted.json"

def load_posted():
    if os.path.exists(STATE_FILE):
        with open(STATE_FILE, "r") as f:
            return set(json.load(f))
    return set()

def save_posted(ids):
    with open(STATE_FILE, "w") as f:
        json.dump(list(ids), f)

def send_to_telegram(text):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {"chat_id": CHANNEL_ID, "text": text, "disable_web_page_preview": False}
    requests.post(url, data=payload)

def main():
    posted_ids = load_posted()
    new_ids = set(posted_ids)

    for feed_url in FEEDS:
        feed = feedparser.parse(feed_url)
        for entry in feed.entries:
            if entry.link not in posted_ids:
                msg = f"{entry.title}\n{entry.link}"
                send_to_telegram(msg)
                new_ids.add(entry.link)

    save_posted(new_ids)

if __name__ == "__main__":
    main()